version: '3.4'

services:
  GatewayApi:
    image: lms_back/${IMAGE_BRANCH:-master}:gatewayapi
    build:
      context: .
      dockerfile: WebApis/GatewayApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - EXTERNAL_CONFIG_PATH=${EXTERNAL_CONFIG_PATH}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${LOG_PATH}/gateway:/app/logs"
      - "${EXTERNAL_CONFIG_PATH}:${EXTERNAL_CONFIG_PATH}"
      - ./Domain/WebCore/GeneralSettings.json:/app/Domain/WebCore/GeneralSettings.json:ro
    ports:
      - "${GATEWAY_PORT}:4000"
    restart: always

  AuthApi:
    image: lms_back/${IMAGE_BRANCH:-master}:authapi
    build:
      context: .
      dockerfile: WebApis/AuthApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - EXTERNAL_CONFIG_PATH=${EXTERNAL_CONFIG_PATH}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${LOG_PATH}/auth:/app/logs"
      - "${EXTERNAL_CONFIG_PATH}:${EXTERNAL_CONFIG_PATH}"
      - ./Domain/WebCore/GeneralSettings.json:/app/Domain/WebCore/GeneralSettings.json:ro
    ports:
      - "${AUTH_PORT}:4001"
    restart: always

  AssetApi:
    image: lms_back/${IMAGE_BRANCH:-master}:assetapi
    build:
      context: .
      dockerfile: WebApis/AssetApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - EXTERNAL_CONFIG_PATH=${EXTERNAL_CONFIG_PATH}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${ASSET_WWWROOT_PATH}:/app/wwwroot"
      - "${LOG_PATH}/asset:/app/logs"
      - "${EXTERNAL_CONFIG_PATH}:${EXTERNAL_CONFIG_PATH}"
      - ./Domain/WebCore/GeneralSettings.json:/app/Domain/WebCore/GeneralSettings.json:ro
    ports:
      - "${ASSET_PORT}:4002"
    restart: always

  ReferenceBookApi:
    image: lms_back/${IMAGE_BRANCH:-master}:referencebookapi
    build:
      context: .
      dockerfile: WebApis/ReferenceBookApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - EXTERNAL_CONFIG_PATH=${EXTERNAL_CONFIG_PATH}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${LOG_PATH}/referencebook:/app/logs"
      - "${EXTERNAL_CONFIG_PATH}:${EXTERNAL_CONFIG_PATH}"
      - ./Domain/WebCore/GeneralSettings.json:/app/Domain/WebCore/GeneralSettings.json:ro
    ports:
      - "${REFERENCEBOOK_PORT}:4003"
    restart: always

  LearningApi:
    image: lms_back/${IMAGE_BRANCH:-master}:learningapi
    build:
      context: .
      dockerfile: WebApis/LearningApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - EXTERNAL_CONFIG_PATH=${EXTERNAL_CONFIG_PATH}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${LOG_PATH}/learning:/app/logs"
      - "${EXTERNAL_CONFIG_PATH}:${EXTERNAL_CONFIG_PATH}"
      - ./Domain/WebCore/GeneralSettings.json:/app/Domain/WebCore/GeneralSettings.json:ro
    ports:
      - "${LEARNING_PORT}:4004"
    restart: always

  RedisCache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data: